describe('wordnik.js', function() {	var callback;		beforeEach(function() {		callback = jasmine.createSpy();	});		it('should be able to get hyphened representation of a specified word', function() {		wordnik.get_hyphenation('cynosure', callback);				waitsFor(function() {			return callback.callCount > 0;		});				runs(function() {			var data = callback.mostRecentCall.args[0];			var hyphened = $.map(data, function(v, i) { return v.text; }).join('·');			expect(callback).toHaveBeenCalled();			expect(hyphened).toEqual('cy·no·sure');		});	});		it('should be able to get pronunciation for a specified word', function() {		wordnik.get_pronunciation('cynosure', callback);				waitsFor(function() {			return callback.callCount > 0;		});				runs(function() {			var data = callback.mostRecentCall.args[0];			var formatted;			if(data.length > 0) {				to = data[0].raw.length - 1;				formatted = data[0].raw.substring(1, to);			}			expect(formatted).toEqual('sīˈnə-sho͝orˌ, sĭnˈə-'); 		});	});		it('should be able to get audio for a specified word', function() {		wordnik.get_audio('cynosure', callback);				waitsFor(function() {			return callback.callCount > 0;		});				runs(function() {			var data = callback.mostRecentCall.args[0];			expect(data[0].word).toEqual('cynosure');		});	});		it('should be able to get "word of the day" by a specified date', function() {		wordnik.get_word_of_the_day(new Date(2011, 7, 12), callback);				waitsFor(function() {			return callback.callCount > 0;		});				runs(function() {			var data = callback.mostRecentCall.args[0];			expect(data.word).toEqual('cynosure');		});	});		xit('should be able to retrieve all required information and assemble them together', function() {		wordnik.assemble(new Date(2011, 7, 12), callback);				waitsFor(function() {			return callback.callCount > 0;		});				runs(function() {			var data = callback.mostRecentCall.args[0];			expect(data.word).toEqaul('cynosure');			expect(data.date).toEqual('2011-08-12');		});	});});